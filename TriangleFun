// Playing with triangles
// verson 1.2b

int triA_X = 200;
int triA_Y = 200;

int triB_X = 50;
int triB_Y = 100;

int triC_X = 250;
int triC_Y = 200;

float areaTri;

PFont f;                          // STEP 2 Declare PFont variable


void setup(){
  
  size(400,400);
    f = createFont("Arial",16,true); // STEP 3 Create Font

   
}

void draw (){
 
 background(255);
 fill(255);
 ellipse(triA_X,triA_Y,20,20); 
 ellipse(triB_X,triB_Y,20,20);
 ellipse(triC_X,triC_Y,20,20);
 triangle(triB_X,triB_Y,triC_X,triC_Y,triA_X,triA_Y); 
 float lineAB = sqrt(pow((triA_X-triB_X),2) + pow((triA_Y - triB_Y),2)); // calculate line AB
 float lineBC = sqrt(pow((triB_X-triC_X),2) + pow((triB_Y - triC_Y),2)); // calculate line BC
 float lineCA = sqrt(pow((triC_X-triA_X),2) + pow((triC_Y - triA_Y),2)); // calculate line CA
 float angleA = degrees(acos((pow(lineAB,2)+pow(lineCA,2)-pow(lineBC,2))/(2*(lineAB*lineCA)))); //base on "law of cosinus" from http://www.mathsisfun.com/algebra/trig-solving-sss-triangles.html
 // har feil....  float angleB = degrees(acos((pow(lineBC,2)+pow(lineAB,2)-pow(lineCA,2))/(2*(lineCA*lineBC)))); //base on "law of cosinus" from http://www.mathsisfun.com/algebra/trig-solving-sss-triangles.html
 float angleC = 180 - (angleA+angleB);
 areaTri = ((lineAB + lineBC + lineCA) / 2 );
 areaTri = (sqrt(areaTri*(areaTri - lineAB)*(areaTri - lineBC)*(areaTri - lineCA)));  //Calculate Area based on Heron's formula
 
textFont(f,10);                 // STEP 4 Specify font to be used
fill(0);
text("A: " + triA_X + "," + triA_Y,10,10);  // STEP 6 Display A Coordinate
text("B: " + triB_X + "," + triB_Y,75,10);  // STEP 6 Display B Coordinate
text("C: " + triC_X + "," + triC_Y,150,10);  // STEP 6 Display C Coordinate
text("Line AB: " + lineAB,10,20);  
text("Line BC: " + lineBC,10,30);  
text("Line CA: " + lineCA,10,40);
text("Areal: " + areaTri,10,50);
text("Angle A: " + angleA,150,20);
text("Angle B: " + angleB,150,30);
text("Angle C: " + angleC,150,40);
println(angleA);

point(triA_X,triB_Y);

}

void mouseDragged(){
 if (triA_X + 10 > mouseX && triA_X - 10 < mouseX && triA_Y + 10 > mouseY && triA_Y - 10 < mouseY){
   triA_X = mouseX;
   triA_Y = mouseY;
 }
 if (triB_X + 10 > mouseX && triB_X - 10 < mouseX && triB_Y + 10 > mouseY && triB_Y - 10 < mouseY){
   triB_X = mouseX;
   triB_Y = mouseY;
 }
  if (triC_X + 10 > mouseX && triC_X - 10 < mouseX && triC_Y + 10 > mouseY && triC_Y - 10 < mouseY){
   triC_X = mouseX;
   triC_Y = mouseY;
 }


}  
